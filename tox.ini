# Generated from:
# https://github.com/plone/meta/tree/master/config/default
[tox]
envlist =
    format
    lint

[testenv]
py_files = git ls-files "*.py"
text_files = git ls-files "*.rst" "*.md"
xml_files = git ls-files "*.xml"
zcml_files = git ls-files "*.zcml"
allowlist_externals =
    sh

[testenv:format]
description = automatically reformat python code
skip_install = true
deps =
    pyupgrade
    isort
    black
    zpretty
    -c lint-requirements.txt
commands =
    sh -c '{[testenv]py_files} | xargs pyupgrade --py38-plus'
    sh -c '{[testenv]py_files} | xargs isort'
    sh -c '{[testenv]py_files} | xargs black'
    sh -c '{[testenv]xml_files} | xargs zpretty -x -i || true'
    sh -c '{[testenv]zcml_files} | xargs zpretty -z -i || true'

[testenv:lint]
description = run linters that will help improve the code style
skip_install = true
deps =
    flake8
    codespell
    tomli  # needed for codespell to read pyproject.toml
    check-manifest
    pyroma
    -c lint-requirements.txt
commands =
    sh -c '{[testenv]py_files} | xargs flake8'
    sh -c '{[testenv]py_files} | xargs codespell'
    sh -c '{[testenv]text_files} | xargs codespell'
    check-manifest
    pyroma -n 10 .

[testenv:dependencies]
description = check if the package defines all its dependencies
deps =
    z3c.dependencychecker
    -c lint-requirements.txt
commands =
    dependencychecker

[testenv:dependencies-graph]
description = generate a graph with the distribution dependencies
deps =
    pipdeptree
    graphviz  # optional dependency of pipdeptree
    -c lint-requirements.txt
commands =
    sh -c 'pipdeptree --exclude setuptools,pipdeptree,wheel --graph-output svg > dependencies.svg'

[testenv:test]
description = run the distribution's tests
deps =
    five.intid[test]
    pytest
    gocept.pytestlayer
    -c https://dist.plone.org/release/6.0-dev/constraints.txt
commands =
    pip install -e .
    pytest
